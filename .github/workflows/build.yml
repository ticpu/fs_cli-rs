name: Build and Release

on:
  push:
    branches: [ master, main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master, main ]

env:
  CARGO_TERM_COLOR: always
  BINARY_NAME: fs_cli

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            dockerfile: Containerfile
            
    steps:
    - uses: actions/checkout@v4

    - name: Build binary in container
      run: |
        docker build -f ${{ matrix.dockerfile }} -t fs_cli-build .
        CONTAINER=$(docker create fs_cli-build)
        docker cp $CONTAINER:/app/target/release/${{ env.BINARY_NAME }} ${{ env.BINARY_NAME }}-${{ matrix.target }}
        docker rm $CONTAINER
        docker rmi fs_cli-build
        chmod +x ${{ env.BINARY_NAME }}-${{ matrix.target }}
        
    - name: Test binary
      run: |
        ./${{ env.BINARY_NAME }}-${{ matrix.target }} --version || echo "Version test completed"
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.BINARY_NAME }}-${{ matrix.target }}
        path: ${{ env.BINARY_NAME }}-${{ matrix.target }}
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        
    - name: Prepare release assets
      run: |
        cd artifacts
        for dir in */; do
          cd "$dir"
          binary_file=$(ls)
          # Rename to Debian-style naming: fs_cli_${VERSION}_amd64.deb-compatible
          version=${GITHUB_REF#refs/tags/v}
          new_name="fs_cli_${version}_amd64.debian-compatible"
          mv "$binary_file" "$new_name"
          cd ..
        done
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/*/*.debian-compatible
        draft: false
        prerelease: false
        generate_release_notes: false
        name: "FreeSWITCH CLI ${{ github.ref_name }}"
        body: |
          FreeSWITCH CLI client built for maximum compatibility.
          
          Built using Debian Buster base for broad Linux compatibility.
          
          **Installation:**
          ```bash
          wget https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/fs_cli_${{ github.ref_name }}_amd64.debian-compatible
          sudo install -m0755 fs_cli_${{ github.ref_name }}_amd64.debian-compatible /usr/local/bin/fs_cli && rm fs_cli_${{ github.ref_name }}_amd64.debian-compatible
          ```
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}